""" Vundle
set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'gmarik/Vundle.vim'
Plugin 'kien/ctrlp.vim'                                         "nvim
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-fugitive'
Plugin 'int3/vim-extradite'                                     "DROP
Plugin 'xolox/vim-misc'                                         "DROP
Plugin 'xolox/vim-notes'                                        "DROP
Plugin 'christoomey/vim-tmux-navigator'                         "nvim
Plugin 'rking/ag.vim'                                           "DROP
Plugin 'Konfekt/FastFold'
Plugin 'ekalinin/Dockerfile.vim'                                "DROP
" lang specific
Plugin 'klen/python-mode'
Plugin 'fatih/vim-go'
Plugin 'rust-lang/rust.vim'
Plugin 'pangloss/vim-javascript'
Plugin 'othree/javascript-libraries-syntax.vim'
Plugin 'othree/html5.vim'
call vundle#end()
filetype plugin indent on

""""""""" NVIM 

""" tab settings, 4 space tabs, always.                         "nvim
set tabstop=4
set shiftwidth=4
set expandtab
set smarttab
set autoindent

""" modeline                                                    "nvim
set showcmd    " show partial command in visual mode
set showmode   " show mode on last line
set ruler      " line & column number of cursor

""" other settings                                              nvim
set title        " set title of window
set number       " show line numbers
set hidden       " allow editing multiple buffers
set scrolloff=5  " keep 5 lines visible above/below cursor
set splitbelow   " make window splits flow more naturally
set splitright
set ignorecase   " ignore case in search
set smartcase    " ...unless we specify capital letters
set incsearch    " highlight as we search
set autochdir    " set pwd to local file, so edit paths are relative
set wildmenu     " nice autocomplete menu
set list         " show whitespace
set listchars=tab:Â»\ ,trail:\ 
autocmd filetype go set listchars=tab:\ \ ,trail:\ 
" open folds by default
autocmd filetype python normal zR
set virtualedit=block     " allow editing in virtual space in block mode
"set directory=~/.vimtmp   " keep all tempfiles in same dir
" work with X11 clipboard(?)
set clipboard=unnamed
set colorcolumn=80
set backspace=indent,eol,start


if v:version > 703 || v:version == 703 && has("patch541")
  set formatoptions+=j " Delete comment character when joining commented lines
endif

""" color scheme                                                "drop
set t_Co=256
colorscheme busybee
syntax on            " use syntax color highlighting
filetype plugin indent on
highlight ColorColumn ctermbg=237

""" autocompletion
autocmd FileType python set omnifunc=pythoncomplete#Complete
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd BufRead,BufNewFile *.json setfiletype json
autocmd BufRead,BufNewFile *.{md,markdown} setfiletype markdown
autocmd FileType javascript setlocal shiftwidth=2 tabstop=2
autocmd FileType html setlocal shiftwidth=2 tabstop=2

""" config for plugins
" ctrlp only autocompletes things in git if we're in a .git dir
let g:ctrlp_user_command = ['.git/', 'cd %s && git ls-files']

" Ag
let g:ag_working_path_mode="r"

" notes
let g:notes_suffix = '.txt'

" python specific settings, highlight everything & use slow sync
let g:pymode_options_max_line_length = 99
let g:pymode_folding = 1
let g:pymode_doc = 0
let g:pymode_virtualenv = 0
let g:pymode_rope = 0
let g:pymode_lint = 1
let g:pymode_lint_cwindow = 0
let g:pymode_lint_checkers = ['pep8', 'pyflakes']
let g:pymode_lint_on_write = 1
let g:pymode_lint_signs = 1
let python_highlight_all=1
let python_slow_sync=1

" javascript
let g:used_javascript_libs = 'react,jquery,underscore'

""" powerline
python from powerline.vim import setup as powerline_setup
python powerline_setup()
python del powerline_setup
set laststatus=2

""" custom commands

" removes trailing spaces
function! TrimSpace()
  %s/\s*$//
  ''
:endfunction
command! -bar -nargs=0 TrimSpace call TrimSpace()
